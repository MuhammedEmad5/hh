// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'building_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Building _$BuildingFromJson(Map<String, dynamic> json) => Building(
      VendorId: json['VendorId'] as num? ?? 0,
      buildingNo: json['buildingNo'] as num,
      parentNo: json['parentNo'] as num?,
      userNumber: json['userNumber'] as String?,
      depthNum: (json['depthNum'] as num?)?.toInt() ?? 0,
      aName: json['aName'] as String,
      eName: json['eName'] as String?,
      aDescription: json['aDescription'] as String?,
      eDescription: json['eDescription'] as String?,
      isShowInProfit: json['isShowInProfit'],
      job: json['job'] as String?,
      officeNumber: (json['officeNumber'] as num?)?.toInt(),
      studentNumber: (json['studentNumber'] as num?)?.toInt(),
      maxBalanceAllowed: json['maxBalanceAllowed'] as num? ?? 0.0,
      minBalanceAllowed: json['minBalanceAllowed'] as num? ?? 0.0,
      warnMinBalance: json['warnMinBalance'] as num? ?? 0.0,
      warnMaxBalance: json['warnMaxBalance'] as num? ?? 0.0,
      isLeaf: json['isLeaf'] ?? 0,
      isDisabled: json['isDisabled'] ?? 0,
      isCanDelete: json['isCanDelete'] ?? 0,
      isCanMove: json['isCanMove'] ?? 0,
      isCanAdd: json['isCanAdd'] ?? 0,
      typeNo: (json['typeNo'] as num?)?.toInt() ?? 1,
      subTypeNo: (json['subTypeNo'] as num?)?.toInt(),
      statusNo: (json['statusNo'] as num?)?.toInt(),
      nature: (json['nature'] as num?)?.toInt(),
      isOwned: json['isOwned'] ?? 0,
      isLand: json['isLand'] ?? 0,
      note: json['note'] as String?,
      isPosted: json['isPosted'] ?? 0,
      isDeleted: json['isDeleted'] ?? 0,
      deletedDate: json['deletedDate'] as String?,
      disabledDate: json['disabledDate'] as String?,
      tableNo: json['tableNo'] as num?,
      fileNo: json['fileNo'] as num?,
      accountNo_Second_ForLogger: json['accountNo_Second_ForLogger'] as num?,
      accountNo_Second_depth: (json['accountNo_Second_depth'] as num?)?.toInt(),
      horizontalTreeNo: json['horizontalTreeNo'] as num?,
      accountNo: json['accountNo'] as num?,
      necMac: json['necMac'] as String?,
      themeNo: json['themeNo'] as num?,
      personNo: (json['personNo'] as num?)?.toInt(),
      regionNo: json['regionNo'] as num?,
      optReport_UserType: (json['optReport_UserType'] as num?)?.toInt(),
      reportHeaderWord_Type: (json['reportHeaderWord_Type'] as num?)?.toInt(),
      reportHeaderWord_isVisible: json['reportHeaderWord_isVisible'] ?? 0,
      isUseReportIcon: json['isUseReportIcon'] ?? 0,
      reportIconPath: json['reportIconPath'] as String?,
      isUseIconInsteadOfHeader: json['isUseIconInsteadOfHeader'] ?? 0,
      repaName: json['repaName'] as String?,
      aBusinessRegistrationNo: json['aBusinessRegistrationNo'] as String?,
      repeName: json['repeName'] as String?,
      eBusinessRegistrationNo: json['eBusinessRegistrationNo'] as String?,
      barCode: json['barCode'] as String?,
      buildingType: (json['buildingType'] as num?)?.toInt(),
      placeDeliveryDate: json['placeDeliveryDate'] as String?,
      isDb: json['isDb'] ?? 0,
      centralComputerBuildingNo: json['centralComputerBuildingNo'] as num?,
      computer: json['computer'] as String?,
      sqlInstance: json['sqlInstance'] as String?,
      mainDatabase: json['mainDatabase'] as String?,
      connectTimeout: (json['connectTimeout'] as num?)?.toInt(),
      buildingSec: json['buildingSec'] as String?,
      buildingT: json['buildingT'] as String?,
      storeNo_buildingNo: json['storeNo_buildingNo'] as num?,
      building_CompanyNo: (json['building_CompanyNo'] as num?)?.toInt() ?? 1,
      z____Report_: json['z____Report_'] ?? 0,
      calculatedStoreTotalsDateG: json['calculatedStoreTotalsDateG'] as String?,
      buyPrice_Total: json['buyPrice_Total'] as num? ?? 0.0,
      maxBuyPrice_Total: json['maxBuyPrice_Total'] as num? ?? 0.0,
      size_Weight_Total: json['size_Weight_Total'] as num? ?? 0.0,
      cost_Total: json['cost_Total'] as num? ?? 0.0,
      additionalCost_Total: json['additionalCost_Total'] as num? ?? 0.0,
      sellPrice_Total: json['sellPrice_Total'] as num? ?? 0.0,
      sellPrice2_Total: json['sellPrice2_Total'] as num? ?? 0.0,
      sellPrice3_Total: json['sellPrice3_Total'] as num? ?? 0.0,
      sellPrice4_Total: json['sellPrice4_Total'] as num? ?? 0.0,
      profitMarginTotal_Total: json['profitMarginTotal_Total'] as num? ?? 0.0,
      profitMarginTotal2_Total: json['profitMarginTotal2_Total'] as num? ?? 0.0,
      profitMarginTotal3_Total: json['profitMarginTotal3_Total'] as num? ?? 0.0,
      profitMarginTotal4_Total: json['profitMarginTotal4_Total'] as num? ?? 0.0,
      leastSellPrice_Total: json['leastSellPrice_Total'] as num? ?? 0.0,
      discount_Total: json['discount_Total'] as num? ?? 0.0,
      address: json['address'] as String?,
      report_Link: json['report_Link'] as String?,
      Msg_whatsappPhoneFrom: json['Msg_whatsappPhoneFrom'] as String?,
      Msg_SMSPhoneFrom: json['Msg_SMSPhoneFrom'] as String?,
      Msg_eMailFrom: json['Msg_eMailFrom'] as String?,
      Msg_whatsappPhoneManagers: json['Msg_whatsappPhoneManagers'] as String?,
      Msg_SMSPhoneManagers: json['Msg_SMSPhoneManagers'] as String?,
      Msg_eMailManagers: json['Msg_eMailManagers'] as String?,
      zv2_ProdCsidSecret: json['zv2_ProdCsidSecret'] as String?,
      zv2_ProdCsidBinarySecurityToken:
          json['zv2_ProdCsidBinarySecurityToken'] as String?,
      zv2_ProdCsidRequestId: json['zv2_ProdCsidRequestId'] as String?,
      zv2_ComplianceSecret: json['zv2_ComplianceSecret'] as String?,
      zv2_ComplianceBinarySecurityToken:
          json['zv2_ComplianceBinarySecurityToken'] as String?,
      zv2_ComplianceRequestId: json['zv2_ComplianceRequestId'] as String?,
      zv2_Csr: json['zv2_Csr'] as String?,
      zv2_otp: json['zv2_otp'] as String?,
      zv2_Country: json['zv2_Country'] as String?,
      zv2_Industry: json['zv2_Industry'] as String?,
      zv2_VAT: json['zv2_VAT'] as String?,
      zv2_UniqueIdentifier: json['zv2_UniqueIdentifier'] as String?,
      zv2_UniqueNameOfUnit: json['zv2_UniqueNameOfUnit'] as String?,
      zv2_CRN: json['zv2_CRN'] as String?,
      departmentJobNo: json['departmentJobNo'] as num?,
      zatcaDeviceID: json['zatcaDeviceID'] as String?,
      zatcaToken: json['zatcaToken'] as String?,
      zatcaHash: json['zatcaHash'] as String?,
      isMismatchingWithApp: json['isMismatchingWithApp'],
      zatcaStage: (json['zatcaStage'] as num?)?.toInt() ?? 0,
      zatcaInvoiceType: json['zatcaInvoiceType'] as String?,
      secondBusinessIDType:
          (json['secondBusinessIDType'] as num?)?.toInt() ?? 0,
      secondBusinessID: json['secondBusinessID'] as String?,
      ZATCA_B2C_SendingIntervalType:
          (json['ZATCA_B2C_SendingIntervalType'] as num?)?.toInt() ?? 0,
      ZATCA_B2C_SendingIntervalTime:
          (json['ZATCA_B2C_SendingIntervalTime'] as num?)?.toInt() ?? 0,
      apartmentNum: json['apartmentNum'] as String?,
      POBox: json['POBox'] as String?,
      POBoxAdditionalNum: json['POBoxAdditionalNum'] as String?,
      street_Arb: json['street_Arb'] as String?,
      street_Eng: json['street_Eng'] as String?,
      district_Arb: json['district_Arb'] as String?,
      district_Eng: json['district_Eng'] as String?,
      city_Arb: json['city_Arb'] as String?,
      city_Eng: json['city_Eng'] as String?,
      countrySubdivision_Arb: json['countrySubdivision_Arb'] as String?,
      countrySubdivision_Eng: json['countrySubdivision_Eng'] as String?,
      country_Arb: json['country_Arb'] as String?,
      country_Eng: json['country_Eng'] as String?,
      countryNo: (json['countryNo'] as num?)?.toInt() ?? 0,
    );

Map<String, dynamic> _$BuildingToJson(Building instance) => <String, dynamic>{
      'VendorId': instance.VendorId,
      'buildingNo': instance.buildingNo,
      'parentNo': instance.parentNo,
      'userNumber': instance.userNumber,
      'depthNum': instance.depthNum,
      'aName': instance.aName,
      'eName': instance.eName,
      'aDescription': instance.aDescription,
      'eDescription': instance.eDescription,
      'isShowInProfit': instance.isShowInProfit,
      'job': instance.job,
      'officeNumber': instance.officeNumber,
      'studentNumber': instance.studentNumber,
      'maxBalanceAllowed': instance.maxBalanceAllowed,
      'minBalanceAllowed': instance.minBalanceAllowed,
      'warnMinBalance': instance.warnMinBalance,
      'warnMaxBalance': instance.warnMaxBalance,
      'isLeaf': instance.isLeaf,
      'isDisabled': instance.isDisabled,
      'isCanDelete': instance.isCanDelete,
      'isCanMove': instance.isCanMove,
      'isCanAdd': instance.isCanAdd,
      'typeNo': instance.typeNo,
      'subTypeNo': instance.subTypeNo,
      'statusNo': instance.statusNo,
      'nature': instance.nature,
      'isOwned': instance.isOwned,
      'isLand': instance.isLand,
      'note': instance.note,
      'isPosted': instance.isPosted,
      'isDeleted': instance.isDeleted,
      'deletedDate': instance.deletedDate,
      'disabledDate': instance.disabledDate,
      'tableNo': instance.tableNo,
      'fileNo': instance.fileNo,
      'accountNo_Second_ForLogger': instance.accountNo_Second_ForLogger,
      'accountNo_Second_depth': instance.accountNo_Second_depth,
      'horizontalTreeNo': instance.horizontalTreeNo,
      'accountNo': instance.accountNo,
      'necMac': instance.necMac,
      'themeNo': instance.themeNo,
      'personNo': instance.personNo,
      'regionNo': instance.regionNo,
      'optReport_UserType': instance.optReport_UserType,
      'reportHeaderWord_Type': instance.reportHeaderWord_Type,
      'reportHeaderWord_isVisible': instance.reportHeaderWord_isVisible,
      'isUseReportIcon': instance.isUseReportIcon,
      'reportIconPath': instance.reportIconPath,
      'isUseIconInsteadOfHeader': instance.isUseIconInsteadOfHeader,
      'repaName': instance.repaName,
      'aBusinessRegistrationNo': instance.aBusinessRegistrationNo,
      'repeName': instance.repeName,
      'eBusinessRegistrationNo': instance.eBusinessRegistrationNo,
      'barCode': instance.barCode,
      'buildingType': instance.buildingType,
      'placeDeliveryDate': instance.placeDeliveryDate,
      'isDb': instance.isDb,
      'centralComputerBuildingNo': instance.centralComputerBuildingNo,
      'computer': instance.computer,
      'sqlInstance': instance.sqlInstance,
      'mainDatabase': instance.mainDatabase,
      'connectTimeout': instance.connectTimeout,
      'buildingSec': instance.buildingSec,
      'buildingT': instance.buildingT,
      'storeNo_buildingNo': instance.storeNo_buildingNo,
      'building_CompanyNo': instance.building_CompanyNo,
      'z____Report_': instance.z____Report_,
      'calculatedStoreTotalsDateG': instance.calculatedStoreTotalsDateG,
      'buyPrice_Total': instance.buyPrice_Total,
      'maxBuyPrice_Total': instance.maxBuyPrice_Total,
      'size_Weight_Total': instance.size_Weight_Total,
      'cost_Total': instance.cost_Total,
      'additionalCost_Total': instance.additionalCost_Total,
      'sellPrice_Total': instance.sellPrice_Total,
      'sellPrice2_Total': instance.sellPrice2_Total,
      'sellPrice3_Total': instance.sellPrice3_Total,
      'sellPrice4_Total': instance.sellPrice4_Total,
      'profitMarginTotal_Total': instance.profitMarginTotal_Total,
      'profitMarginTotal2_Total': instance.profitMarginTotal2_Total,
      'profitMarginTotal3_Total': instance.profitMarginTotal3_Total,
      'profitMarginTotal4_Total': instance.profitMarginTotal4_Total,
      'leastSellPrice_Total': instance.leastSellPrice_Total,
      'discount_Total': instance.discount_Total,
      'address': instance.address,
      'report_Link': instance.report_Link,
      'Msg_whatsappPhoneFrom': instance.Msg_whatsappPhoneFrom,
      'Msg_SMSPhoneFrom': instance.Msg_SMSPhoneFrom,
      'Msg_eMailFrom': instance.Msg_eMailFrom,
      'Msg_whatsappPhoneManagers': instance.Msg_whatsappPhoneManagers,
      'Msg_SMSPhoneManagers': instance.Msg_SMSPhoneManagers,
      'Msg_eMailManagers': instance.Msg_eMailManagers,
      'zv2_ProdCsidSecret': instance.zv2_ProdCsidSecret,
      'zv2_ProdCsidBinarySecurityToken':
          instance.zv2_ProdCsidBinarySecurityToken,
      'zv2_ProdCsidRequestId': instance.zv2_ProdCsidRequestId,
      'zv2_ComplianceSecret': instance.zv2_ComplianceSecret,
      'zv2_ComplianceBinarySecurityToken':
          instance.zv2_ComplianceBinarySecurityToken,
      'zv2_ComplianceRequestId': instance.zv2_ComplianceRequestId,
      'zv2_Csr': instance.zv2_Csr,
      'zv2_otp': instance.zv2_otp,
      'zv2_Country': instance.zv2_Country,
      'zv2_Industry': instance.zv2_Industry,
      'zv2_VAT': instance.zv2_VAT,
      'zv2_UniqueIdentifier': instance.zv2_UniqueIdentifier,
      'zv2_UniqueNameOfUnit': instance.zv2_UniqueNameOfUnit,
      'zv2_CRN': instance.zv2_CRN,
      'departmentJobNo': instance.departmentJobNo,
      'zatcaDeviceID': instance.zatcaDeviceID,
      'zatcaToken': instance.zatcaToken,
      'zatcaHash': instance.zatcaHash,
      'isMismatchingWithApp': instance.isMismatchingWithApp,
      'zatcaStage': instance.zatcaStage,
      'zatcaInvoiceType': instance.zatcaInvoiceType,
      'secondBusinessIDType': instance.secondBusinessIDType,
      'secondBusinessID': instance.secondBusinessID,
      'ZATCA_B2C_SendingIntervalType': instance.ZATCA_B2C_SendingIntervalType,
      'ZATCA_B2C_SendingIntervalTime': instance.ZATCA_B2C_SendingIntervalTime,
      'apartmentNum': instance.apartmentNum,
      'POBox': instance.POBox,
      'POBoxAdditionalNum': instance.POBoxAdditionalNum,
      'street_Arb': instance.street_Arb,
      'street_Eng': instance.street_Eng,
      'district_Arb': instance.district_Arb,
      'district_Eng': instance.district_Eng,
      'city_Arb': instance.city_Arb,
      'city_Eng': instance.city_Eng,
      'countrySubdivision_Arb': instance.countrySubdivision_Arb,
      'countrySubdivision_Eng': instance.countrySubdivision_Eng,
      'country_Arb': instance.country_Arb,
      'country_Eng': instance.country_Eng,
      'countryNo': instance.countryNo,
    };
